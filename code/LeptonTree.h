// -*- C++ -*-
// This is a header file generated with the command:
// makeCMS3ClassFiles("/hadoop/cms/store/user/phchang/condor/forCommissioningv4/2016SingleMu_1.root", "t", "LeptonTree", "tas", "lepton_tree")

#ifndef LeptonTree_H
#define LeptonTree_H

#include "Math/LorentzVector.h"
#include "Math/Point3D.h"
#include "TMath.h"
#include "TBranch.h"
#include "TTree.h"
#include "TH1F.h"
#include "TFile.h"
#include "TBits.h"
#include <vector> 
#include <unistd.h> 
typedef ROOT::Math::LorentzVector< ROOT::Math::PxPyPzE4D<float> > LorentzVector;

using namespace std; 
class LeptonTree {
 private: 
 protected: 
  unsigned int index;
  float    evt_corrMET_;
  TBranch *evt_corrMET_branch;
  bool     evt_corrMET_isLoaded;
  float    evt_corrMETPhi_;
  TBranch *evt_corrMETPhi_branch;
  bool     evt_corrMETPhi_isLoaded;
  bool     evt_isRealData_;
  TBranch *evt_isRealData_branch;
  bool     evt_isRealData_isLoaded;
  float    scale1fb_;
  TBranch *scale1fb_branch;
  bool     scale1fb_isLoaded;
  float    ht_;
  TBranch *ht_branch;
  bool     ht_isLoaded;
  float    ht_SS_;
  TBranch *ht_SS_branch;
  bool     ht_SS_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *jets_;
  TBranch *jets_branch;
  bool     jets_isLoaded;
  vector<float> *jets_disc_;
  TBranch *jets_disc_branch;
  bool     jets_disc_isLoaded;
  vector<float> *jets_area_;
  TBranch *jets_area_branch;
  bool     jets_area_isLoaded;
  vector<float> *jets_undoJEC_;
  TBranch *jets_undoJEC_branch;
  bool     jets_undoJEC_isLoaded;
  int      nFOs_SS_;
  TBranch *nFOs_SS_branch;
  bool     nFOs_SS_isLoaded;
  int      nvtx_;
  TBranch *nvtx_branch;
  bool     nvtx_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *p4_;
  TBranch *p4_branch;
  bool     p4_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *tag_p4_;
  TBranch *tag_p4_branch;
  bool     tag_p4_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *dilep_p4_;
  TBranch *dilep_p4_branch;
  bool     dilep_p4_isLoaded;
  int      id_;
  TBranch *id_branch;
  bool     id_isLoaded;
  int      idx_;
  TBranch *idx_branch;
  bool     idx_isLoaded;
  float    dxyPV_;
  TBranch *dxyPV_branch;
  bool     dxyPV_isLoaded;
  float    dZ_;
  TBranch *dZ_branch;
  bool     dZ_isLoaded;
  float    dxyPV_err_;
  TBranch *dxyPV_err_branch;
  bool     dxyPV_err_isLoaded;
  int      motherID_;
  TBranch *motherID_branch;
  bool     motherID_isLoaded;
  int      mc_id_;
  TBranch *mc_id_branch;
  bool     mc_id_isLoaded;
  float    RelIso03_;
  TBranch *RelIso03_branch;
  bool     RelIso03_isLoaded;
  float    RelIso03EA_;
  TBranch *RelIso03EA_branch;
  bool     RelIso03EA_isLoaded;
  float    RelIso03DB_;
  TBranch *RelIso03DB_branch;
  bool     RelIso03DB_isLoaded;
  float    tkIso_;
  TBranch *tkIso_branch;
  bool     tkIso_isLoaded;
  bool     passes_VVV_cutbased_veto_;
  TBranch *passes_VVV_cutbased_veto_branch;
  bool     passes_VVV_cutbased_veto_isLoaded;
  bool     passes_VVV_cutbased_veto_noiso_;
  TBranch *passes_VVV_cutbased_veto_noiso_branch;
  bool     passes_VVV_cutbased_veto_noiso_isLoaded;
  bool     passes_VVV_cutbased_veto_noiso_noip_;
  TBranch *passes_VVV_cutbased_veto_noiso_noip_branch;
  bool     passes_VVV_cutbased_veto_noiso_noip_isLoaded;
  bool     passes_VVV_cutbased_fo_;
  TBranch *passes_VVV_cutbased_fo_branch;
  bool     passes_VVV_cutbased_fo_isLoaded;
  bool     passes_VVV_cutbased_fo_noiso_;
  TBranch *passes_VVV_cutbased_fo_noiso_branch;
  bool     passes_VVV_cutbased_fo_noiso_isLoaded;
  bool     passes_VVV_cutbased_tight_noiso_;
  TBranch *passes_VVV_cutbased_tight_noiso_branch;
  bool     passes_VVV_cutbased_tight_noiso_isLoaded;
  bool     passes_VVV_cutbased_tight_;
  TBranch *passes_VVV_cutbased_tight_branch;
  bool     passes_VVV_cutbased_tight_isLoaded;
  bool     passes_VVV_MVAbased_tight_noiso_;
  TBranch *passes_VVV_MVAbased_tight_noiso_branch;
  bool     passes_VVV_MVAbased_tight_noiso_isLoaded;
  bool     passes_VVV_MVAbased_tight_;
  TBranch *passes_VVV_MVAbased_tight_branch;
  bool     passes_VVV_MVAbased_tight_isLoaded;
  bool     passes_VVV_baseline_;
  TBranch *passes_VVV_baseline_branch;
  bool     passes_VVV_baseline_isLoaded;
  float    ip3d_;
  TBranch *ip3d_branch;
  bool     ip3d_isLoaded;
  float    ip3derr_;
  TBranch *ip3derr_branch;
  bool     ip3derr_isLoaded;
  float    miniiso_;
  TBranch *miniiso_branch;
  bool     miniiso_isLoaded;
  float    miniisoDB_;
  TBranch *miniisoDB_branch;
  bool     miniisoDB_isLoaded;
  float    reliso04_;
  TBranch *reliso04_branch;
  bool     reliso04_isLoaded;
  float    annulus04_;
  TBranch *annulus04_branch;
  bool     annulus04_isLoaded;
  float    AbsTrkIso_;
  TBranch *AbsTrkIso_branch;
  bool     AbsTrkIso_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *jet_close_lep_;
  TBranch *jet_close_lep_branch;
  bool     jet_close_lep_isLoaded;
  float    jet_close_lep_undoJEC_;
  TBranch *jet_close_lep_undoJEC_branch;
  bool     jet_close_lep_undoJEC_isLoaded;
  float    jet_close_L1_;
  TBranch *jet_close_L1_branch;
  bool     jet_close_L1_isLoaded;
  float    jet_close_L2L3_;
  TBranch *jet_close_L2L3_branch;
  bool     jet_close_L2L3_isLoaded;
  float    ptratio_;
  TBranch *ptratio_branch;
  bool     ptratio_isLoaded;
  float    dilep_mass_;
  TBranch *dilep_mass_branch;
  bool     dilep_mass_isLoaded;
  bool     isRandom_;
  TBranch *isRandom_branch;
  bool     isRandom_isLoaded;
  float    sigmaIEtaIEta_full5x5_;
  TBranch *sigmaIEtaIEta_full5x5_branch;
  bool     sigmaIEtaIEta_full5x5_isLoaded;
  float    etaSC_;
  TBranch *etaSC_branch;
  bool     etaSC_isLoaded;
  float    dEtaIn_;
  TBranch *dEtaIn_branch;
  bool     dEtaIn_isLoaded;
  float    dPhiIn_;
  TBranch *dPhiIn_branch;
  bool     dPhiIn_isLoaded;
  float    hOverE_;
  TBranch *hOverE_branch;
  bool     hOverE_isLoaded;
  float    scSeedEta_;
  TBranch *scSeedEta_branch;
  bool     scSeedEta_isLoaded;
  float    ecalEnergy_;
  TBranch *ecalEnergy_branch;
  bool     ecalEnergy_isLoaded;
  bool     conv_vtx_flag_;
  TBranch *conv_vtx_flag_branch;
  bool     conv_vtx_flag_isLoaded;
  int      charge_;
  TBranch *charge_branch;
  bool     charge_isLoaded;
  float    mva_25ns_;
  TBranch *mva_25ns_branch;
  bool     mva_25ns_isLoaded;
  float    tag_mva_25ns_;
  TBranch *tag_mva_25ns_branch;
  bool     tag_mva_25ns_isLoaded;
  float    ecalPFClusterIso_;
  TBranch *ecalPFClusterIso_branch;
  bool     ecalPFClusterIso_isLoaded;
  float    hcalPFClusterIso_;
  TBranch *hcalPFClusterIso_branch;
  bool     hcalPFClusterIso_isLoaded;
  int      HLT_Mu8_;
  TBranch *HLT_Mu8_branch;
  bool     HLT_Mu8_isLoaded;
  int      HLT_Mu17_;
  TBranch *HLT_Mu17_branch;
  bool     HLT_Mu17_isLoaded;
  int      HLT_Mu8_TrkIsoVVL_;
  TBranch *HLT_Mu8_TrkIsoVVL_branch;
  bool     HLT_Mu8_TrkIsoVVL_isLoaded;
  int      HLT_Mu17_TrkIsoVVL_;
  TBranch *HLT_Mu17_TrkIsoVVL_branch;
  bool     HLT_Mu17_TrkIsoVVL_isLoaded;
  int      HLT_IsoMu24_;
  TBranch *HLT_IsoMu24_branch;
  bool     HLT_IsoMu24_isLoaded;
  int      HLT_IsoTkMu24_;
  TBranch *HLT_IsoTkMu24_branch;
  bool     HLT_IsoTkMu24_isLoaded;
  int      HLT_Ele8_CaloIdM_TrackIdM_PFJet30_;
  TBranch *HLT_Ele8_CaloIdM_TrackIdM_PFJet30_branch;
  bool     HLT_Ele8_CaloIdM_TrackIdM_PFJet30_isLoaded;
  int      HLT_Ele17_CaloIdM_TrackIdM_PFJet30_;
  TBranch *HLT_Ele17_CaloIdM_TrackIdM_PFJet30_branch;
  bool     HLT_Ele17_CaloIdM_TrackIdM_PFJet30_isLoaded;
  int      HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_;
  TBranch *HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_branch;
  bool     HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_isLoaded;
  int      HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30_;
  TBranch *HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30_branch;
  bool     HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30_isLoaded;
public: 
void Init(TTree *tree);
void GetEntry(unsigned int idx); 
void LoadAllBranches(); 
  const float &evt_corrMET();
  const float &evt_corrMETPhi();
  const bool &evt_isRealData();
  const float &scale1fb();
  const float &ht();
  const float &ht_SS();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jets();
  const vector<float> &jets_disc();
  const vector<float> &jets_area();
  const vector<float> &jets_undoJEC();
  const int &nFOs_SS();
  const int &nvtx();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &p4();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &tag_p4();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &dilep_p4();
  const int &id();
  const int &idx();
  const float &dxyPV();
  const float &dZ();
  const float &dxyPV_err();
  const int &motherID();
  const int &mc_id();
  const float &RelIso03();
  const float &RelIso03EA();
  const float &RelIso03DB();
  const float &tkIso();
  const bool &passes_VVV_cutbased_veto();
  const bool &passes_VVV_cutbased_veto_noiso();
  const bool &passes_VVV_cutbased_veto_noiso_noip();
  const bool &passes_VVV_cutbased_fo();
  const bool &passes_VVV_cutbased_fo_noiso();
  const bool &passes_VVV_cutbased_tight_noiso();
  const bool &passes_VVV_cutbased_tight();
  const bool &passes_VVV_MVAbased_tight_noiso();
  const bool &passes_VVV_MVAbased_tight();
  const bool &passes_VVV_baseline();
  const float &ip3d();
  const float &ip3derr();
  const float &miniiso();
  const float &miniisoDB();
  const float &reliso04();
  const float &annulus04();
  const float &AbsTrkIso();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jet_close_lep();
  const float &jet_close_lep_undoJEC();
  const float &jet_close_L1();
  const float &jet_close_L2L3();
  const float &ptratio();
  const float &dilep_mass();
  const bool &isRandom();
  const float &sigmaIEtaIEta_full5x5();
  const float &etaSC();
  const float &dEtaIn();
  const float &dPhiIn();
  const float &hOverE();
  const float &scSeedEta();
  const float &ecalEnergy();
  const bool &conv_vtx_flag();
  const int &charge();
  const float &mva_25ns();
  const float &tag_mva_25ns();
  const float &ecalPFClusterIso();
  const float &hcalPFClusterIso();
  const int &HLT_Mu8();
  const int &HLT_Mu17();
  const int &HLT_Mu8_TrkIsoVVL();
  const int &HLT_Mu17_TrkIsoVVL();
  const int &HLT_IsoMu24();
  const int &HLT_IsoTkMu24();
  const int &HLT_Ele8_CaloIdM_TrackIdM_PFJet30();
  const int &HLT_Ele17_CaloIdM_TrackIdM_PFJet30();
  const int &HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30();
  const int &HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30();

  static void progress(int nEventsTotal, int nEventsChain);
};

#ifndef __CINT__
extern LeptonTree lepton_tree;
#endif

namespace tas {
  const float &evt_corrMET();
  const float &evt_corrMETPhi();
  const bool &evt_isRealData();
  const float &scale1fb();
  const float &ht();
  const float &ht_SS();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jets();
  const vector<float> &jets_disc();
  const vector<float> &jets_area();
  const vector<float> &jets_undoJEC();
  const int &nFOs_SS();
  const int &nvtx();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &p4();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &tag_p4();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &dilep_p4();
  const int &id();
  const int &idx();
  const float &dxyPV();
  const float &dZ();
  const float &dxyPV_err();
  const int &motherID();
  const int &mc_id();
  const float &RelIso03();
  const float &RelIso03EA();
  const float &RelIso03DB();
  const float &tkIso();
  const bool &passes_VVV_cutbased_veto();
  const bool &passes_VVV_cutbased_veto_noiso();
  const bool &passes_VVV_cutbased_veto_noiso_noip();
  const bool &passes_VVV_cutbased_fo();
  const bool &passes_VVV_cutbased_fo_noiso();
  const bool &passes_VVV_cutbased_tight_noiso();
  const bool &passes_VVV_cutbased_tight();
  const bool &passes_VVV_MVAbased_tight_noiso();
  const bool &passes_VVV_MVAbased_tight();
  const bool &passes_VVV_baseline();
  const float &ip3d();
  const float &ip3derr();
  const float &miniiso();
  const float &miniisoDB();
  const float &reliso04();
  const float &annulus04();
  const float &AbsTrkIso();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jet_close_lep();
  const float &jet_close_lep_undoJEC();
  const float &jet_close_L1();
  const float &jet_close_L2L3();
  const float &ptratio();
  const float &dilep_mass();
  const bool &isRandom();
  const float &sigmaIEtaIEta_full5x5();
  const float &etaSC();
  const float &dEtaIn();
  const float &dPhiIn();
  const float &hOverE();
  const float &scSeedEta();
  const float &ecalEnergy();
  const bool &conv_vtx_flag();
  const int &charge();
  const float &mva_25ns();
  const float &tag_mva_25ns();
  const float &ecalPFClusterIso();
  const float &hcalPFClusterIso();
  const int &HLT_Mu8();
  const int &HLT_Mu17();
  const int &HLT_Mu8_TrkIsoVVL();
  const int &HLT_Mu17_TrkIsoVVL();
  const int &HLT_IsoMu24();
  const int &HLT_IsoTkMu24();
  const int &HLT_Ele8_CaloIdM_TrackIdM_PFJet30();
  const int &HLT_Ele17_CaloIdM_TrackIdM_PFJet30();
  const int &HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30();
  const int &HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30();
}
#endif
